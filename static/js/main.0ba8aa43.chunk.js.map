{"version":3,"sources":["components/ExpenseCard.js","config.js","components/LoginCard.js","components/Modal.js","components/CardDetail.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseCard","expenseData","toggleCardDetail","expenseClass","category","className","onClick","console","log","expense","toLocaleString","type","Date","at","hour","minute","year","month","day","config","baseUrl","LoginCard","changeLoggedInTrue","useState","user","setUser","pass","setPass","email","setEmail","showError","setShowError","errorMessage","setErrorMessage","userData","setUserData","showRegister","setShowRegister","xmlns","fill","viewBox","stroke","d","placeholder","onChange","e","target","value","loginUrl","loginData","password","axios","post","then","res","data","id","localStorage","setItem","message","logUser","registerUrl","registerData","registerUser","Modal","updateExpenses","loggOutUser","splits","setSplits","setType","ammount","setAmmount","selectedMenu","setSelectedMenu","categories","setCategories","editInput","setEditInput","setSelectedClass","option","ogClass","map","parseInt","Splitarray","Array","split","index","tmpSplit","name","paid","tmpExpense","now","removeItem","class","CardDetail","detail","updateSplit","getBorder","hour12","splt","length","weekday","App","showModal","setShowModal","isLoggedIn","setIsLoggedIn","total","setTotal","cardDetail","setCardDetail","expenses","setExpenses","useEffect","getExpenses","calculateTotal","tmpUserData","getItem","splitCorrection","totalCorrection","calculateRemaining","totalExp","get","finaltmp","exp","_id","uploadExpense","AppContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ba8aa43.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ExpenseCard({ expenseData, toggleCardDetail }) {\r\n  let expenseClass =\r\n    expenseData.category == \"expense\"\r\n      ? \"expense-background\"\r\n      : \"income-background\";\r\n  return (\r\n    <div\r\n      className={`expense-card ${expenseClass}`}\r\n      onClick={() => {\r\n        console.log(expenseData);\r\n        toggleCardDetail(expenseData);\r\n      }}\r\n    >\r\n      <div className=\"expense-card-value\">\r\n        ₹ {expenseData.expense.toLocaleString(\"en-IN\")}\r\n      </div>\r\n      <div className=\"expense-card-subtitle\">\r\n        {expenseData.type && (\r\n          <div className=\"expense-card-type\">{expenseData.type}</div>\r\n        )}\r\n\r\n        <div>\r\n          <div className=\"expense-card-date\">\r\n            {new Date(expenseData.at).toLocaleString(\"en-IN\", {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })}\r\n          </div>\r\n          <div className=\"expense-card-date\">\r\n            {new Date(expenseData.at).toLocaleString(\"en-IN\", {\r\n              year: \"numeric\",\r\n              month: \"numeric\",\r\n              day: \"numeric\",\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseCard;\r\n","let config = {\r\n  // baseUrl: \"http://192.168.1.13:3000\",\r\n  baseUrl: \"https://arcane-wave-10684.herokuapp.com\",\r\n};\r\nexport default config;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport config from \"../config\";\r\n\r\nfunction LoginCard({ changeLoggedInTrue }) {\r\n  let [user, setUser] = useState(\"\");\r\n  let [pass, setPass] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  let [showError, setShowError] = useState(false);\r\n  let [errorMessage, setErrorMessage] = useState();\r\n  let [userData, setUserData] = useState({});\r\n  let [showRegister, setShowRegister] = useState(false);\r\n\r\n  let baseUrl = `${config.baseUrl}/auth`;\r\n\r\n  let logUser = (user, pass) => {\r\n    let loginUrl = `${baseUrl}/login`;\r\n    let loginData = {\r\n      user: user,\r\n      password: pass,\r\n    };\r\n    axios.post(loginUrl, loginData).then((res) => {\r\n      console.log(res.data);\r\n      if (res.data.id) {\r\n        localStorage.setItem(\"userID\", res.data.id);\r\n        localStorage.setItem(\"userEmail\", res.data.email);\r\n        setUserData(res.data);\r\n      } else {\r\n        setErrorMessage(res.data.message);\r\n        setShowError(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  let registerUser = (user, pass, email) => {\r\n    let registerUrl = `${baseUrl}/register`;\r\n    let registerData = {\r\n      user: user,\r\n      password: pass,\r\n      email: email,\r\n    };\r\n    axios.post(registerUrl, registerData).then((res) => {\r\n      if (res.data.message == \"success\") {\r\n        setShowRegister(false);\r\n      } else {\r\n        setErrorMessage(res.data.message);\r\n        setShowError(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  let handleClick = () => {\r\n    if (user && pass && !showRegister) {\r\n      logUser(user, pass);\r\n      if (userData.id) {\r\n        setShowError(false);\r\n        changeLoggedInTrue(userData);\r\n      }\r\n    } else {\r\n      if (user && pass && email && showRegister) {\r\n        registerUser(user, pass, email);\r\n      } else {\r\n        setErrorMessage(\"Please fill out the details\");\r\n        setShowError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container login-card-container\">\r\n      {showError && <div className=\"error-bar\">{errorMessage}</div>}\r\n      <div className=\"login-card\">\r\n        <div className=\"login-header\">\r\n          {showRegister ? \"Register\" : \"Login\"}\r\n          {showRegister && (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              onClick={() => {\r\n                setShowRegister(false);\r\n              }}\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M15 19l-7-7 7-7\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </div>\r\n        <div className=\"login-input\">\r\n          {showRegister && (\r\n            <input\r\n              placeholder=\"Email\"\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            ></input>\r\n          )}\r\n          <input\r\n            placeholder=\"User\"\r\n            onChange={(e) => {\r\n              setUser(e.target.value);\r\n            }}\r\n          ></input>\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            onChange={(e) => {\r\n              setPass(e.target.value);\r\n            }}\r\n          ></input>\r\n          {!showRegister && (\r\n            <div\r\n              className=\"register-btn\"\r\n              onClick={() => {\r\n                setShowRegister(true);\r\n              }}\r\n            >\r\n              New user?\r\n            </div>\r\n          )}\r\n          <div className=\"go-btn\" onClick={handleClick}>\r\n            Go\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Modal({ updateExpenses, loggOutUser }) {\r\n  let [splits, setSplits] = useState([]);\r\n  let [type, setType] = useState();\r\n  let [ammount, setAmmount] = useState();\r\n  let [selectedMenu, setSelectedMenu] = useState(0);\r\n  let [categories, setCategories] = useState([\"Grocery\", \"Home\"]);\r\n  let [editInput, setEditInput] = useState();\r\n\r\n  let setSelectedClass = (option, ogClass) => {\r\n    if (option == selectedMenu) {\r\n      return ogClass;\r\n    } else {\r\n      return `${ogClass} not-selected`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      {selectedMenu == 0 && (\r\n        <div className=\"modal-form\">\r\n          <div className=\"modal-type-dropdown\">\r\n            <label>Type</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setType(e.target.value);\r\n              }}\r\n            >\r\n              <option value={null}>Choose Option</option>\r\n              {categories.map((category) => (\r\n                <option value={category}>{category}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"modal-amount-input\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"69.99\"\r\n              onChange={(e) => {\r\n                setAmmount(parseInt(e.target.value));\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"modal-split\">\r\n            <label>Split</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Split between\"\r\n              onChange={(e) => {\r\n                if (e.target.value > 0 && e.target.value < 10) {\r\n                  let Splitarray = new Array(parseInt(e.target.value)).fill(0);\r\n                  setSplits(Splitarray);\r\n                }\r\n              }}\r\n            />\r\n            {splits.map((split, index) => (\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                onChange={(e) => {\r\n                  let tmpSplit = splits;\r\n                  tmpSplit[index] = {\r\n                    name: e.target.value,\r\n                    paid: false,\r\n                  };\r\n                  setSplits(tmpSplit);\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"modal-options\">\r\n            <div\r\n              className=\"modal-option modal-option-left expense-background\"\r\n              onClick={() => {\r\n                console.log(`Ammount:${ammount} Type:${type}`);\r\n                let tmpExpense = {\r\n                  expense: ammount,\r\n                  type: type,\r\n                  at: Date.now(),\r\n                  split: splits[0] ? splits : 0,\r\n                  category: \"expense\",\r\n                };\r\n                updateExpenses(tmpExpense);\r\n              }}\r\n            >\r\n              -\r\n            </div>\r\n            <div\r\n              className=\"modal-option modal-option-right income-background\"\r\n              onClick={() => {\r\n                console.log(`Ammount:${ammount} Type:${type} Split:${splits}`);\r\n                let tmpExpense = {\r\n                  expense: ammount,\r\n                  type: type,\r\n                  at: Date.now(),\r\n                  split: splits[0] ? splits : 0,\r\n                  category: \"income\",\r\n                };\r\n                updateExpenses(tmpExpense);\r\n              }}\r\n            >\r\n              +\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {selectedMenu == 1 && (\r\n        <div className=\"edit-modal\">\r\n          <label>Add New Category</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Home\"\r\n            onChange={(e) => {\r\n              setEditInput(e.target.value);\r\n            }}\r\n          ></input>\r\n          <div\r\n            className=\"edit-modal-cta\"\r\n            onClick={() => {\r\n              setCategories([...categories, editInput]);\r\n              setSelectedMenu(0);\r\n            }}\r\n          >\r\n            Add\r\n          </div>\r\n          <div\r\n            className=\"logout-cta\"\r\n            onClick={() => {\r\n              localStorage.removeItem(\"userID\");\r\n              localStorage.removeItem(\"userEmail\");\r\n              loggOutUser();\r\n            }}\r\n          >\r\n            Log out\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div class=\"modal-submenu\">\r\n        <div\r\n          className={setSelectedClass(0, \"submenu-opt1\")}\r\n          onClick={() => {\r\n            setSelectedMenu(0);\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"2\"\r\n              d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div\r\n          className={setSelectedClass(1, \"submenu-opt2\")}\r\n          onClick={() => {\r\n            setSelectedMenu(1);\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"2\"\r\n              d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nfunction CardDetail({ detail, updateSplit }) {\r\n  let getBorder = detail.category == \"income\" ? \" border-green\" : \" border-red\";\r\n  return (\r\n    <div className=\"card-detail-container\">\r\n      <div className=\"card-detail-card\">\r\n        <div className={`${getBorder} card-detail-titlebar`}>\r\n          <div class=\"card-detail-title\">{detail.category}</div>\r\n          <div class=\"card-detail-expense\">₹ {detail.expense}</div>\r\n        </div>\r\n        <div className={`card-detail-date-row ${getBorder}`}>\r\n          <div>\r\n            {new Date(detail.at).toLocaleString(\"en-IN\", {\r\n              year: \"numeric\",\r\n              month: \"numeric\",\r\n              day: \"numeric\",\r\n            })}\r\n          </div>\r\n          {new Date(detail.at).toLocaleString(\"en-IN\", {\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            hour12: true,\r\n          })}\r\n        </div>\r\n        {detail.split[0] ? (\r\n          <div className={`card-detail-splits ${getBorder}`}>\r\n            {detail.split.map((splt, index) => (\r\n              <div\r\n                className={\r\n                  splt.paid\r\n                    ? \"split-strikethrough split-detail\"\r\n                    : \"split-detail\"\r\n                }\r\n                onClick={() => {\r\n                  updateSplit(detail, index);\r\n                }}\r\n              >\r\n                <div>{splt.name}</div>\r\n                <div className=\"split-value\">\r\n                  ₹ {detail.expense / detail.split.length}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"card-detail-tags\">\r\n          <div class=\"card-detail-tag tag-color-primary\">{detail.type}</div>\r\n          {detail.split.length > 1 && (\r\n            <div class=\"card-detail-tag tag-color-split\">\r\n              Split x{detail.split.length}\r\n            </div>\r\n          )}\r\n          <div class=\"card-detail-tag tag-color-date\">\r\n            {new Date(detail.at).toLocaleString(\"en-IN\", {\r\n              weekday: \"short\",\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardDetail;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport ExpenseCard from \"./components/ExpenseCard\";\nimport LoginCard from \"./components/LoginCard\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\nimport CardDetail from \"./components/CardDetail\";\nimport config from \"./config\";\n\nfunction App() {\n  let [showModal, setShowModal] = useState(false);\n  let [isLoggedIn, setIsLoggedIn] = useState(false);\n  let [userData, setUserData] = useState();\n  let [total, setTotal] = useState(0);\n  let [remaining, setRemaining] = useState(0);\n  let [cardDetail, setCardDetail] = useState({});\n  let [expenses, setExpenses] = useState([\n    // {\n    //   expense: 11000,\n    //   type: \"Grocery\",\n    //   at: Date.now(),\n    //   category: \"expense\",\n    // },\n    // {\n    //   expense: 11300,\n    //   type: \"Home\",\n    //   at: Date.now(),\n    //   category: \"income\",\n    // },\n  ]);\n\n  useEffect(() => {\n    getExpenses();\n  }, [isLoggedIn]);\n\n  useEffect(() => {\n    setTotal(calculateTotal(expenses));\n  }, [expenses]);\n\n  useEffect(() => {\n    let tmpUserData = {\n      id: localStorage.getItem(\"userID\"),\n      email: localStorage.getItem(\"userEmail\"),\n    };\n    if (tmpUserData.id) {\n      setUserData(tmpUserData);\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  let baseUrl = `${config.baseUrl}/expenses`;\n\n  let splitCorrection = () => {\n    let totalCorrection = 0;\n    expenses.map((expense) => {\n      if (expense.split[0] && expense.split[0].name) {\n        expense.split.map((splt) => {\n          if (splt.paid) {\n            totalCorrection =\n              totalCorrection + expense.expense / expense.split.length;\n          }\n        });\n      }\n    });\n    return totalCorrection;\n  };\n\n  let calculateTotal = (expenses) => {\n    let total = 0;\n    expenses.map((expense) => {\n      if (expense.category == \"income\") {\n        total = total + expense.expense;\n      }\n    });\n    return total;\n  };\n\n  let calculateRemaining = (expenses) => {\n    let totalExp = 0;\n    expenses.map((expense) => {\n      if (expense.category == \"expense\") {\n        totalExp = totalExp + expense.expense;\n      }\n    });\n    return totalExp;\n  };\n\n  let getExpenses = () => {\n    userData &&\n      axios.get(`${baseUrl}/user/${userData.id}`).then((res) => {\n        let expenses = res.data.expenses;\n        setExpenses(expenses);\n      });\n  };\n\n  let changeLoggedInTrue = (userData) => {\n    setUserData(userData);\n    setIsLoggedIn(true);\n  };\n  let loggOutUser = () => {\n    setShowModal(false);\n    setIsLoggedIn(false);\n  };\n  let updateSplit = (detail, index) => {\n    detail.split[index].paid = !detail.split[index].paid;\n    axios.post(`${baseUrl}/update`, detail).then((res) => {\n      if (res.data.message == \"success\") {\n        let tmpExpenses = expenses;\n        let finaltmp = tmpExpenses.map((exp) => {\n          if (exp._id == detail._id) {\n            return detail;\n          } else {\n            return exp;\n          }\n        });\n        setExpenses(finaltmp);\n      }\n    });\n  };\n  let updateExpenses = (tmpExpense) => {\n    setExpenses([...expenses, tmpExpense]);\n    let uploadExpense = {\n      ...tmpExpense,\n      user: userData.id,\n    };\n    axios\n      .post(`${baseUrl}/post`, { uploadExpense })\n      .then((res) => console.log(res));\n    setShowModal(!showModal);\n  };\n  let toggleCardDetail = (expense) => {\n    setCardDetail(expense);\n  };\n\n  let AppContainer = () => (\n    <div className=\"app-container\">\n      {/* <div className=\"error-bar\">ID : {userData.id}</div> */}\n      {cardDetail.expense && (\n        <CardDetail detail={cardDetail} updateSplit={updateSplit} />\n      )}\n      <div className=\"recent-cards\">\n        {expenses.map((expense) => (\n          <ExpenseCard\n            expenseData={expense}\n            toggleCardDetail={toggleCardDetail}\n          />\n        ))}\n      </div>\n      {showModal && (\n        <Modal updateExpenses={updateExpenses} loggOutUser={loggOutUser} />\n      )}\n      <div className=\"summary-card\">\n        <div className=\"total-title\">\n          Total\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            onClick={() => {\n              setShowModal(!showModal);\n            }}\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </div>\n        <div className=\"total-value\">\n          ₹ {total - calculateRemaining(expenses) + splitCorrection()} / ₹{\" \"}\n          {total}\n        </div>\n        {/* <div className=\"balence-distribution\">\n          Bank <span>11,000</span> | Cash <span>300</span>\n        </div> */}\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <AppContainer />\n      ) : (\n        <LoginCard changeLoggedInTrue={changeLoggedInTrue} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}